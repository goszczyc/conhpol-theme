/** BREAKPOINTS MEDIA **/
@mixin media($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
/** CENTER HORIZONTAL & VERTICAL **/
@mixin center($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);
  } @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}
/** PSEUDOELEMENT AFTER & BEFORE **/
@mixin pseudo($display: block, $pos: absolute, $content: "") {
  content: $content;
  display: $display;
  position: $pos;
}
/** POSITION ABSOLUTE **/
@mixin pos-abs($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

/** CALCULATE TO REM **/
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}
@mixin font-size($size) {
  font-size: calculateRem($size);
}

// Page Components
@mixin section-title-primary {
  font-size: 3.6rem;
  font-weight: 400;
  color: $text-color-secondary;
  text-align: center;
  margin: 0;
  width: fit-content;
  padding: 1.6rem;
  background: $primary-color;
  @media (max-width: 576px) {
    font-size: 3rem;
  }
}
@mixin section-title-secondary {
  font-size: 3.6rem;
  font-weight: 400;
  color: $text-color-secondary;
  text-align: center;
  margin: 0;
  width: fit-content;

  @media (max-width: 576px) {
    font-size: 3rem;
  }
}

@mixin scale-fontsize($fontsize, $scale: 0.4) {
  font-size: $fontsize;
  @for $i from length($breakpoints)*-1 through -1 {
   @media (max-width: nth(nth($breakpoints, abs($i)), 2)) {
     font-size: $fontsize * (1 - $scale/abs($i));
   }
  }
}
